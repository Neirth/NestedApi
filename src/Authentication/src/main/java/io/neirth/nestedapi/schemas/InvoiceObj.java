/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package io.neirth.nestedapi.schemas;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class InvoiceObj extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -9172537654843994618L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"InvoiceObj\",\"namespace\":\"io.neirth.nestedapi.schemas\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"userId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"creationDate\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"deliveryAddress\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"deliveryPostcode\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"deliveryCountry\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"deliveryCurrency\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"deliveryAddressInformation\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"products\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"ProductObj\",\"fields\":[{\"name\":\"productName\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"productPrice\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"productAmount\",\"type\":[\"null\",\"int\"],\"default\":null}]}}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<InvoiceObj> ENCODER =
      new BinaryMessageEncoder<InvoiceObj>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<InvoiceObj> DECODER =
      new BinaryMessageDecoder<InvoiceObj>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<InvoiceObj> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<InvoiceObj> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<InvoiceObj> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<InvoiceObj>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this InvoiceObj to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a InvoiceObj from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a InvoiceObj instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static InvoiceObj fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.lang.CharSequence id;
   private java.lang.Long userId;
   private java.lang.CharSequence creationDate;
   private java.lang.CharSequence deliveryAddress;
   private java.lang.CharSequence deliveryPostcode;
   private java.lang.CharSequence deliveryCountry;
   private java.lang.CharSequence deliveryCurrency;
   private java.lang.CharSequence deliveryAddressInformation;
   private java.util.List<io.neirth.nestedapi.schemas.ProductObj> products;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public InvoiceObj() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param userId The new value for userId
   * @param creationDate The new value for creationDate
   * @param deliveryAddress The new value for deliveryAddress
   * @param deliveryPostcode The new value for deliveryPostcode
   * @param deliveryCountry The new value for deliveryCountry
   * @param deliveryCurrency The new value for deliveryCurrency
   * @param deliveryAddressInformation The new value for deliveryAddressInformation
   * @param products The new value for products
   */
  public InvoiceObj(java.lang.CharSequence id, java.lang.Long userId, java.lang.CharSequence creationDate, java.lang.CharSequence deliveryAddress, java.lang.CharSequence deliveryPostcode, java.lang.CharSequence deliveryCountry, java.lang.CharSequence deliveryCurrency, java.lang.CharSequence deliveryAddressInformation, java.util.List<io.neirth.nestedapi.schemas.ProductObj> products) {
    this.id = id;
    this.userId = userId;
    this.creationDate = creationDate;
    this.deliveryAddress = deliveryAddress;
    this.deliveryPostcode = deliveryPostcode;
    this.deliveryCountry = deliveryCountry;
    this.deliveryCurrency = deliveryCurrency;
    this.deliveryAddressInformation = deliveryAddressInformation;
    this.products = products;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return userId;
    case 2: return creationDate;
    case 3: return deliveryAddress;
    case 4: return deliveryPostcode;
    case 5: return deliveryCountry;
    case 6: return deliveryCurrency;
    case 7: return deliveryAddressInformation;
    case 8: return products;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.CharSequence)value$; break;
    case 1: userId = (java.lang.Long)value$; break;
    case 2: creationDate = (java.lang.CharSequence)value$; break;
    case 3: deliveryAddress = (java.lang.CharSequence)value$; break;
    case 4: deliveryPostcode = (java.lang.CharSequence)value$; break;
    case 5: deliveryCountry = (java.lang.CharSequence)value$; break;
    case 6: deliveryCurrency = (java.lang.CharSequence)value$; break;
    case 7: deliveryAddressInformation = (java.lang.CharSequence)value$; break;
    case 8: products = (java.util.List<io.neirth.nestedapi.schemas.ProductObj>)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.CharSequence getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.CharSequence value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'userId' field.
   * @return The value of the 'userId' field.
   */
  public java.lang.Long getUserId() {
    return userId;
  }


  /**
   * Sets the value of the 'userId' field.
   * @param value the value to set.
   */
  public void setUserId(java.lang.Long value) {
    this.userId = value;
  }

  /**
   * Gets the value of the 'creationDate' field.
   * @return The value of the 'creationDate' field.
   */
  public java.lang.CharSequence getCreationDate() {
    return creationDate;
  }


  /**
   * Sets the value of the 'creationDate' field.
   * @param value the value to set.
   */
  public void setCreationDate(java.lang.CharSequence value) {
    this.creationDate = value;
  }

  /**
   * Gets the value of the 'deliveryAddress' field.
   * @return The value of the 'deliveryAddress' field.
   */
  public java.lang.CharSequence getDeliveryAddress() {
    return deliveryAddress;
  }


  /**
   * Sets the value of the 'deliveryAddress' field.
   * @param value the value to set.
   */
  public void setDeliveryAddress(java.lang.CharSequence value) {
    this.deliveryAddress = value;
  }

  /**
   * Gets the value of the 'deliveryPostcode' field.
   * @return The value of the 'deliveryPostcode' field.
   */
  public java.lang.CharSequence getDeliveryPostcode() {
    return deliveryPostcode;
  }


  /**
   * Sets the value of the 'deliveryPostcode' field.
   * @param value the value to set.
   */
  public void setDeliveryPostcode(java.lang.CharSequence value) {
    this.deliveryPostcode = value;
  }

  /**
   * Gets the value of the 'deliveryCountry' field.
   * @return The value of the 'deliveryCountry' field.
   */
  public java.lang.CharSequence getDeliveryCountry() {
    return deliveryCountry;
  }


  /**
   * Sets the value of the 'deliveryCountry' field.
   * @param value the value to set.
   */
  public void setDeliveryCountry(java.lang.CharSequence value) {
    this.deliveryCountry = value;
  }

  /**
   * Gets the value of the 'deliveryCurrency' field.
   * @return The value of the 'deliveryCurrency' field.
   */
  public java.lang.CharSequence getDeliveryCurrency() {
    return deliveryCurrency;
  }


  /**
   * Sets the value of the 'deliveryCurrency' field.
   * @param value the value to set.
   */
  public void setDeliveryCurrency(java.lang.CharSequence value) {
    this.deliveryCurrency = value;
  }

  /**
   * Gets the value of the 'deliveryAddressInformation' field.
   * @return The value of the 'deliveryAddressInformation' field.
   */
  public java.lang.CharSequence getDeliveryAddressInformation() {
    return deliveryAddressInformation;
  }


  /**
   * Sets the value of the 'deliveryAddressInformation' field.
   * @param value the value to set.
   */
  public void setDeliveryAddressInformation(java.lang.CharSequence value) {
    this.deliveryAddressInformation = value;
  }

  /**
   * Gets the value of the 'products' field.
   * @return The value of the 'products' field.
   */
  public java.util.List<io.neirth.nestedapi.schemas.ProductObj> getProducts() {
    return products;
  }


  /**
   * Sets the value of the 'products' field.
   * @param value the value to set.
   */
  public void setProducts(java.util.List<io.neirth.nestedapi.schemas.ProductObj> value) {
    this.products = value;
  }

  /**
   * Creates a new InvoiceObj RecordBuilder.
   * @return A new InvoiceObj RecordBuilder
   */
  public static io.neirth.nestedapi.schemas.InvoiceObj.Builder newBuilder() {
    return new io.neirth.nestedapi.schemas.InvoiceObj.Builder();
  }

  /**
   * Creates a new InvoiceObj RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new InvoiceObj RecordBuilder
   */
  public static io.neirth.nestedapi.schemas.InvoiceObj.Builder newBuilder(io.neirth.nestedapi.schemas.InvoiceObj.Builder other) {
    if (other == null) {
      return new io.neirth.nestedapi.schemas.InvoiceObj.Builder();
    } else {
      return new io.neirth.nestedapi.schemas.InvoiceObj.Builder(other);
    }
  }

  /**
   * Creates a new InvoiceObj RecordBuilder by copying an existing InvoiceObj instance.
   * @param other The existing instance to copy.
   * @return A new InvoiceObj RecordBuilder
   */
  public static io.neirth.nestedapi.schemas.InvoiceObj.Builder newBuilder(io.neirth.nestedapi.schemas.InvoiceObj other) {
    if (other == null) {
      return new io.neirth.nestedapi.schemas.InvoiceObj.Builder();
    } else {
      return new io.neirth.nestedapi.schemas.InvoiceObj.Builder(other);
    }
  }

  /**
   * RecordBuilder for InvoiceObj instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<InvoiceObj>
    implements org.apache.avro.data.RecordBuilder<InvoiceObj> {

    private java.lang.CharSequence id;
    private java.lang.Long userId;
    private java.lang.CharSequence creationDate;
    private java.lang.CharSequence deliveryAddress;
    private java.lang.CharSequence deliveryPostcode;
    private java.lang.CharSequence deliveryCountry;
    private java.lang.CharSequence deliveryCurrency;
    private java.lang.CharSequence deliveryAddressInformation;
    private java.util.List<io.neirth.nestedapi.schemas.ProductObj> products;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(io.neirth.nestedapi.schemas.InvoiceObj.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.userId)) {
        this.userId = data().deepCopy(fields()[1].schema(), other.userId);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.creationDate)) {
        this.creationDate = data().deepCopy(fields()[2].schema(), other.creationDate);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.deliveryAddress)) {
        this.deliveryAddress = data().deepCopy(fields()[3].schema(), other.deliveryAddress);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.deliveryPostcode)) {
        this.deliveryPostcode = data().deepCopy(fields()[4].schema(), other.deliveryPostcode);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.deliveryCountry)) {
        this.deliveryCountry = data().deepCopy(fields()[5].schema(), other.deliveryCountry);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.deliveryCurrency)) {
        this.deliveryCurrency = data().deepCopy(fields()[6].schema(), other.deliveryCurrency);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.deliveryAddressInformation)) {
        this.deliveryAddressInformation = data().deepCopy(fields()[7].schema(), other.deliveryAddressInformation);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.products)) {
        this.products = data().deepCopy(fields()[8].schema(), other.products);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
    }

    /**
     * Creates a Builder by copying an existing InvoiceObj instance
     * @param other The existing instance to copy.
     */
    private Builder(io.neirth.nestedapi.schemas.InvoiceObj other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.userId)) {
        this.userId = data().deepCopy(fields()[1].schema(), other.userId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.creationDate)) {
        this.creationDate = data().deepCopy(fields()[2].schema(), other.creationDate);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.deliveryAddress)) {
        this.deliveryAddress = data().deepCopy(fields()[3].schema(), other.deliveryAddress);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.deliveryPostcode)) {
        this.deliveryPostcode = data().deepCopy(fields()[4].schema(), other.deliveryPostcode);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.deliveryCountry)) {
        this.deliveryCountry = data().deepCopy(fields()[5].schema(), other.deliveryCountry);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.deliveryCurrency)) {
        this.deliveryCurrency = data().deepCopy(fields()[6].schema(), other.deliveryCurrency);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.deliveryAddressInformation)) {
        this.deliveryAddressInformation = data().deepCopy(fields()[7].schema(), other.deliveryAddressInformation);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.products)) {
        this.products = data().deepCopy(fields()[8].schema(), other.products);
        fieldSetFlags()[8] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.CharSequence getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public io.neirth.nestedapi.schemas.InvoiceObj.Builder setId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public io.neirth.nestedapi.schemas.InvoiceObj.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'userId' field.
      * @return The value.
      */
    public java.lang.Long getUserId() {
      return userId;
    }


    /**
      * Sets the value of the 'userId' field.
      * @param value The value of 'userId'.
      * @return This builder.
      */
    public io.neirth.nestedapi.schemas.InvoiceObj.Builder setUserId(java.lang.Long value) {
      validate(fields()[1], value);
      this.userId = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'userId' field has been set.
      * @return True if the 'userId' field has been set, false otherwise.
      */
    public boolean hasUserId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'userId' field.
      * @return This builder.
      */
    public io.neirth.nestedapi.schemas.InvoiceObj.Builder clearUserId() {
      userId = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'creationDate' field.
      * @return The value.
      */
    public java.lang.CharSequence getCreationDate() {
      return creationDate;
    }


    /**
      * Sets the value of the 'creationDate' field.
      * @param value The value of 'creationDate'.
      * @return This builder.
      */
    public io.neirth.nestedapi.schemas.InvoiceObj.Builder setCreationDate(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.creationDate = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'creationDate' field has been set.
      * @return True if the 'creationDate' field has been set, false otherwise.
      */
    public boolean hasCreationDate() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'creationDate' field.
      * @return This builder.
      */
    public io.neirth.nestedapi.schemas.InvoiceObj.Builder clearCreationDate() {
      creationDate = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'deliveryAddress' field.
      * @return The value.
      */
    public java.lang.CharSequence getDeliveryAddress() {
      return deliveryAddress;
    }


    /**
      * Sets the value of the 'deliveryAddress' field.
      * @param value The value of 'deliveryAddress'.
      * @return This builder.
      */
    public io.neirth.nestedapi.schemas.InvoiceObj.Builder setDeliveryAddress(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.deliveryAddress = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'deliveryAddress' field has been set.
      * @return True if the 'deliveryAddress' field has been set, false otherwise.
      */
    public boolean hasDeliveryAddress() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'deliveryAddress' field.
      * @return This builder.
      */
    public io.neirth.nestedapi.schemas.InvoiceObj.Builder clearDeliveryAddress() {
      deliveryAddress = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'deliveryPostcode' field.
      * @return The value.
      */
    public java.lang.CharSequence getDeliveryPostcode() {
      return deliveryPostcode;
    }


    /**
      * Sets the value of the 'deliveryPostcode' field.
      * @param value The value of 'deliveryPostcode'.
      * @return This builder.
      */
    public io.neirth.nestedapi.schemas.InvoiceObj.Builder setDeliveryPostcode(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.deliveryPostcode = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'deliveryPostcode' field has been set.
      * @return True if the 'deliveryPostcode' field has been set, false otherwise.
      */
    public boolean hasDeliveryPostcode() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'deliveryPostcode' field.
      * @return This builder.
      */
    public io.neirth.nestedapi.schemas.InvoiceObj.Builder clearDeliveryPostcode() {
      deliveryPostcode = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'deliveryCountry' field.
      * @return The value.
      */
    public java.lang.CharSequence getDeliveryCountry() {
      return deliveryCountry;
    }


    /**
      * Sets the value of the 'deliveryCountry' field.
      * @param value The value of 'deliveryCountry'.
      * @return This builder.
      */
    public io.neirth.nestedapi.schemas.InvoiceObj.Builder setDeliveryCountry(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.deliveryCountry = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'deliveryCountry' field has been set.
      * @return True if the 'deliveryCountry' field has been set, false otherwise.
      */
    public boolean hasDeliveryCountry() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'deliveryCountry' field.
      * @return This builder.
      */
    public io.neirth.nestedapi.schemas.InvoiceObj.Builder clearDeliveryCountry() {
      deliveryCountry = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'deliveryCurrency' field.
      * @return The value.
      */
    public java.lang.CharSequence getDeliveryCurrency() {
      return deliveryCurrency;
    }


    /**
      * Sets the value of the 'deliveryCurrency' field.
      * @param value The value of 'deliveryCurrency'.
      * @return This builder.
      */
    public io.neirth.nestedapi.schemas.InvoiceObj.Builder setDeliveryCurrency(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.deliveryCurrency = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'deliveryCurrency' field has been set.
      * @return True if the 'deliveryCurrency' field has been set, false otherwise.
      */
    public boolean hasDeliveryCurrency() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'deliveryCurrency' field.
      * @return This builder.
      */
    public io.neirth.nestedapi.schemas.InvoiceObj.Builder clearDeliveryCurrency() {
      deliveryCurrency = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'deliveryAddressInformation' field.
      * @return The value.
      */
    public java.lang.CharSequence getDeliveryAddressInformation() {
      return deliveryAddressInformation;
    }


    /**
      * Sets the value of the 'deliveryAddressInformation' field.
      * @param value The value of 'deliveryAddressInformation'.
      * @return This builder.
      */
    public io.neirth.nestedapi.schemas.InvoiceObj.Builder setDeliveryAddressInformation(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.deliveryAddressInformation = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'deliveryAddressInformation' field has been set.
      * @return True if the 'deliveryAddressInformation' field has been set, false otherwise.
      */
    public boolean hasDeliveryAddressInformation() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'deliveryAddressInformation' field.
      * @return This builder.
      */
    public io.neirth.nestedapi.schemas.InvoiceObj.Builder clearDeliveryAddressInformation() {
      deliveryAddressInformation = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'products' field.
      * @return The value.
      */
    public java.util.List<io.neirth.nestedapi.schemas.ProductObj> getProducts() {
      return products;
    }


    /**
      * Sets the value of the 'products' field.
      * @param value The value of 'products'.
      * @return This builder.
      */
    public io.neirth.nestedapi.schemas.InvoiceObj.Builder setProducts(java.util.List<io.neirth.nestedapi.schemas.ProductObj> value) {
      validate(fields()[8], value);
      this.products = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'products' field has been set.
      * @return True if the 'products' field has been set, false otherwise.
      */
    public boolean hasProducts() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'products' field.
      * @return This builder.
      */
    public io.neirth.nestedapi.schemas.InvoiceObj.Builder clearProducts() {
      products = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public InvoiceObj build() {
      try {
        InvoiceObj record = new InvoiceObj();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.userId = fieldSetFlags()[1] ? this.userId : (java.lang.Long) defaultValue(fields()[1]);
        record.creationDate = fieldSetFlags()[2] ? this.creationDate : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.deliveryAddress = fieldSetFlags()[3] ? this.deliveryAddress : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.deliveryPostcode = fieldSetFlags()[4] ? this.deliveryPostcode : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.deliveryCountry = fieldSetFlags()[5] ? this.deliveryCountry : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.deliveryCurrency = fieldSetFlags()[6] ? this.deliveryCurrency : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.deliveryAddressInformation = fieldSetFlags()[7] ? this.deliveryAddressInformation : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.products = fieldSetFlags()[8] ? this.products : (java.util.List<io.neirth.nestedapi.schemas.ProductObj>) defaultValue(fields()[8]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<InvoiceObj>
    WRITER$ = (org.apache.avro.io.DatumWriter<InvoiceObj>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<InvoiceObj>
    READER$ = (org.apache.avro.io.DatumReader<InvoiceObj>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.id == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.id);
    }

    if (this.userId == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeLong(this.userId);
    }

    if (this.creationDate == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.creationDate);
    }

    if (this.deliveryAddress == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.deliveryAddress);
    }

    if (this.deliveryPostcode == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.deliveryPostcode);
    }

    if (this.deliveryCountry == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.deliveryCountry);
    }

    if (this.deliveryCurrency == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.deliveryCurrency);
    }

    if (this.deliveryAddressInformation == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.deliveryAddressInformation);
    }

    if (this.products == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      long size0 = this.products.size();
      out.writeArrayStart();
      out.setItemCount(size0);
      long actualSize0 = 0;
      for (io.neirth.nestedapi.schemas.ProductObj e0: this.products) {
        actualSize0++;
        out.startItem();
        e0.customEncode(out);
      }
      out.writeArrayEnd();
      if (actualSize0 != size0)
        throw new java.util.ConcurrentModificationException("Array-size written was " + size0 + ", but element count was " + actualSize0 + ".");
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 1) {
        in.readNull();
        this.id = null;
      } else {
        this.id = in.readString(this.id instanceof Utf8 ? (Utf8)this.id : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.userId = null;
      } else {
        this.userId = in.readLong();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.creationDate = null;
      } else {
        this.creationDate = in.readString(this.creationDate instanceof Utf8 ? (Utf8)this.creationDate : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.deliveryAddress = null;
      } else {
        this.deliveryAddress = in.readString(this.deliveryAddress instanceof Utf8 ? (Utf8)this.deliveryAddress : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.deliveryPostcode = null;
      } else {
        this.deliveryPostcode = in.readString(this.deliveryPostcode instanceof Utf8 ? (Utf8)this.deliveryPostcode : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.deliveryCountry = null;
      } else {
        this.deliveryCountry = in.readString(this.deliveryCountry instanceof Utf8 ? (Utf8)this.deliveryCountry : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.deliveryCurrency = null;
      } else {
        this.deliveryCurrency = in.readString(this.deliveryCurrency instanceof Utf8 ? (Utf8)this.deliveryCurrency : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.deliveryAddressInformation = null;
      } else {
        this.deliveryAddressInformation = in.readString(this.deliveryAddressInformation instanceof Utf8 ? (Utf8)this.deliveryAddressInformation : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.products = null;
      } else {
        long size0 = in.readArrayStart();
        java.util.List<io.neirth.nestedapi.schemas.ProductObj> a0 = this.products;
        if (a0 == null) {
          a0 = new SpecificData.Array<io.neirth.nestedapi.schemas.ProductObj>((int)size0, SCHEMA$.getField("products").schema().getTypes().get(1));
          this.products = a0;
        } else a0.clear();
        SpecificData.Array<io.neirth.nestedapi.schemas.ProductObj> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<io.neirth.nestedapi.schemas.ProductObj>)a0 : null);
        for ( ; 0 < size0; size0 = in.arrayNext()) {
          for ( ; size0 != 0; size0--) {
            io.neirth.nestedapi.schemas.ProductObj e0 = (ga0 != null ? ga0.peek() : null);
            if (e0 == null) {
              e0 = new io.neirth.nestedapi.schemas.ProductObj();
            }
            e0.customDecode(in);
            a0.add(e0);
          }
        }
      }

    } else {
      for (int i = 0; i < 9; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 1) {
            in.readNull();
            this.id = null;
          } else {
            this.id = in.readString(this.id instanceof Utf8 ? (Utf8)this.id : null);
          }
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.userId = null;
          } else {
            this.userId = in.readLong();
          }
          break;

        case 2:
          if (in.readIndex() != 1) {
            in.readNull();
            this.creationDate = null;
          } else {
            this.creationDate = in.readString(this.creationDate instanceof Utf8 ? (Utf8)this.creationDate : null);
          }
          break;

        case 3:
          if (in.readIndex() != 1) {
            in.readNull();
            this.deliveryAddress = null;
          } else {
            this.deliveryAddress = in.readString(this.deliveryAddress instanceof Utf8 ? (Utf8)this.deliveryAddress : null);
          }
          break;

        case 4:
          if (in.readIndex() != 1) {
            in.readNull();
            this.deliveryPostcode = null;
          } else {
            this.deliveryPostcode = in.readString(this.deliveryPostcode instanceof Utf8 ? (Utf8)this.deliveryPostcode : null);
          }
          break;

        case 5:
          if (in.readIndex() != 1) {
            in.readNull();
            this.deliveryCountry = null;
          } else {
            this.deliveryCountry = in.readString(this.deliveryCountry instanceof Utf8 ? (Utf8)this.deliveryCountry : null);
          }
          break;

        case 6:
          if (in.readIndex() != 1) {
            in.readNull();
            this.deliveryCurrency = null;
          } else {
            this.deliveryCurrency = in.readString(this.deliveryCurrency instanceof Utf8 ? (Utf8)this.deliveryCurrency : null);
          }
          break;

        case 7:
          if (in.readIndex() != 1) {
            in.readNull();
            this.deliveryAddressInformation = null;
          } else {
            this.deliveryAddressInformation = in.readString(this.deliveryAddressInformation instanceof Utf8 ? (Utf8)this.deliveryAddressInformation : null);
          }
          break;

        case 8:
          if (in.readIndex() != 1) {
            in.readNull();
            this.products = null;
          } else {
            long size0 = in.readArrayStart();
            java.util.List<io.neirth.nestedapi.schemas.ProductObj> a0 = this.products;
            if (a0 == null) {
              a0 = new SpecificData.Array<io.neirth.nestedapi.schemas.ProductObj>((int)size0, SCHEMA$.getField("products").schema().getTypes().get(1));
              this.products = a0;
            } else a0.clear();
            SpecificData.Array<io.neirth.nestedapi.schemas.ProductObj> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<io.neirth.nestedapi.schemas.ProductObj>)a0 : null);
            for ( ; 0 < size0; size0 = in.arrayNext()) {
              for ( ; size0 != 0; size0--) {
                io.neirth.nestedapi.schemas.ProductObj e0 = (ga0 != null ? ga0.peek() : null);
                if (e0 == null) {
                  e0 = new io.neirth.nestedapi.schemas.ProductObj();
                }
                e0.customDecode(in);
                a0.add(e0);
              }
            }
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










